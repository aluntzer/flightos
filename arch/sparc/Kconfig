menu "SPARC Configuration"

### Arch specific settings

config PAGE_OFFSET
	bool "Use an offset in physical/virtual page address conversion"
	default n
	help
	  Use an offset when computing the virtual and physical page
	  addresses. This can not work unless the kernel is bootstrapped.
	  If unsure, say N.

config EXTRA_SPARC_PHYS_BANKS
	int "Number of extra physical memory banks"
	default 0
	range 0 31
	help
	 Set number of additional physical memory banks if the machine has more
	 than one.

menu "Memory Management Settings"
	depends on MM
	depends on CHUNK

config SPARC_MM_BLOCK_ORDER_MAX
	int "Initial memory block order upper limit"
	depends on MM
	default 26
	range 6 32
	help
	  The upper limit order (i.e. 2^N bytes) of the largest trackable memory
	  block. If unsure, set this to the size order of your largest single
	  memory bank.
	  Allowed order range is 6 to 31.

config SPARC_MM_BLOCK_ORDER_MIN
	int "Initial memory block order lower limit"
	depends on MM
	default 12
	range 5 30
	help
	  The lower limit order (i.e. 2^N bytes) of the smallest trackable
	  memory block. If unsure, choose the page size of the platform.
	  Allowed order range is 5 to 30.

config SPARC_INIT_PAGE_MAP_MAX_ENTRIES
	int "Maximum number of mappings in initial page map"
	depends on MM
	default 8
	range EXTRA_SPARC_PHYS_BANKS 32
	help
	  Configures the storage space for the initial page map. It's wise to
	  say at least EXTRA_SPARC_PHYS_BANKS here.

config SPARC_BOOTMEM_RESERVE_CHUNK_ORDER
	int "Memory block order to reserve for boot memory allocator"
	depends on MM
	depends on CHUNK
	default 20
	range  12 SPARC_MM_BLOCK_ORDER_MAX
	help
	  The order (i.e. 2^N bytes) of memory to reserve for the boot memory
	  allocator in a single request to the higher-tier memory manager.
	  The boot memory allocator is used by low level functionality, such as
	  the mangement of MMU translation tables, so choose a large enough
	  number. The default (20, i.e. 1 MiB) is a good starting point.
	  Allowed order range is 12 (SPARC page size) to
	  SPARC_MM_BLOCK_ORDER_MAX.

config SPARC_BOOTMEM_REQUEST_NEW_ON_DEMAND
	bool "Allow the boot memory allocator to request new memory blocks"
	depends on MM
	depends on CHUNK
	default y
	help
	 Allow the boot memory allocator to request new blocks of size
	 SPARC_BOOTMEM_RESERVE_CHUNK_ORDER from the higher-tier memory manager.
	 Beware that this will potentially lead to greater memory fragmentation.
	 If unsure, say Y.
endmenu



endmenu


# other

source "init/Kconfig"

source "kernel/Kconfig"

source "lib/Kconfig"

